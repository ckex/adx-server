// Code generated by protoc-gen-go.
// source: iclick_adx_rtb_v3.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	iclick_adx_rtb_v3.proto

It has these top-level messages:
	BidRequest
	BidResponse
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BidRequest struct {
	// 请求ID，唯一标识本次请求，明文字符串
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 默认每次请求一个广告位
	Imp []*BidRequest_Impression `protobuf:"bytes,2,rep,name=imp" json:"imp,omitempty"`
	// 网站信息
	Site   *BidRequest_Site   `protobuf:"bytes,3,opt,name=site" json:"site,omitempty"`
	Device *BidRequest_Device `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	// 用户信息
	User *BidRequest_User `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	// 0 = live mode, 1 = test mode.
	Test int32 `protobuf:"varint,6,opt,name=test" json:"test,omitempty"`
	// 最大竞价时间，单位milliseconds
	Tmax int32 `protobuf:"varint,7,opt,name=tmax" json:"tmax,omitempty"`
	// 竞价货币类型, 默认为人民币(CNY)
	Cur []string `protobuf:"bytes,8,rep,name=cur" json:"cur,omitempty"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

func (m *BidRequest) GetImp() []*BidRequest_Impression {
	if m != nil {
		return m.Imp
	}
	return nil
}

func (m *BidRequest) GetSite() *BidRequest_Site {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *BidRequest) GetDevice() *BidRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest) GetUser() *BidRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

// **** 曝光信息 ****
type BidRequest_Impression struct {
	// 曝光id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 版位信息
	Banner *BidRequest_Impression_Banner `protobuf:"bytes,2,opt,name=banner" json:"banner,omitempty"`
	// 版位底价，单位：千次展示/元
	Bidfloor float32 `protobuf:"fixed32,3,opt,name=bidfloor" json:"bidfloor,omitempty"`
	// 版位货币单位，默认为CNY(人民币)
	Bidfloorcur string `protobuf:"bytes,4,opt,name=bidfloorcur" json:"bidfloorcur,omitempty"`
}

func (m *BidRequest_Impression) Reset()         { *m = BidRequest_Impression{} }
func (m *BidRequest_Impression) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Impression) ProtoMessage()    {}

func (m *BidRequest_Impression) GetBanner() *BidRequest_Impression_Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

// **** 版位信息 ****
type BidRequest_Impression_Banner struct {
	// 宽
	W int32 `protobuf:"varint,1,opt,name=w" json:"w,omitempty"`
	// 高
	H int32 `protobuf:"varint,2,opt,name=h" json:"h,omitempty"`
}

func (m *BidRequest_Impression_Banner) Reset()         { *m = BidRequest_Impression_Banner{} }
func (m *BidRequest_Impression_Banner) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Impression_Banner) ProtoMessage()    {}

// **** 网站信息 ****
type BidRequest_Site struct {
	// 网站id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 页面url
	Page string `protobuf:"bytes,2,opt,name=page" json:"page,omitempty"`
	// publisher
	Publisher *BidRequest_Site_Publisher `protobuf:"bytes,3,opt,name=publisher" json:"publisher,omitempty"`
}

func (m *BidRequest_Site) Reset()         { *m = BidRequest_Site{} }
func (m *BidRequest_Site) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Site) ProtoMessage()    {}

func (m *BidRequest_Site) GetPublisher() *BidRequest_Site_Publisher {
	if m != nil {
		return m.Publisher
	}
	return nil
}

// ****  Publisher 媒体相关信息
type BidRequest_Site_Publisher struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *BidRequest_Site_Publisher) Reset()         { *m = BidRequest_Site_Publisher{} }
func (m *BidRequest_Site_Publisher) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Site_Publisher) ProtoMessage()    {}

// **** 设备信息 ****
type BidRequest_Device struct {
	// User-Agent
	Ua string `protobuf:"bytes,1,opt,name=ua" json:"ua,omitempty"`
	// 用户IP地址，点分十进制字符串
	Ip string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *BidRequest_Device) Reset()         { *m = BidRequest_Device{} }
func (m *BidRequest_Device) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device) ProtoMessage()    {}

// **** 用户信息 ****
type BidRequest_User struct {
	// 用户ID
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Partner's User ID
	Buyeruid string `protobuf:"bytes,2,opt,name=buyeruid" json:"buyeruid,omitempty"`
}

func (m *BidRequest_User) Reset()         { *m = BidRequest_User{} }
func (m *BidRequest_User) String() string { return proto.CompactTextString(m) }
func (*BidRequest_User) ProtoMessage()    {}

type BidResponse struct {
	// 返回ID，请将请求中的id赋值给返回id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 返回的广告信息
	Seatbid []*BidResponse_SeatBid `protobuf:"bytes,2,rep,name=seatbid" json:"seatbid,omitempty"`
	Cur     string                 `protobuf:"bytes,3,opt,name=cur" json:"cur,omitempty"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}

func (m *BidResponse) GetSeatbid() []*BidResponse_SeatBid {
	if m != nil {
		return m.Seatbid
	}
	return nil
}

// **** seatbid ****
type BidResponse_SeatBid struct {
	// 返回的竞价广告
	Bid []*BidResponse_SeatBid_Bid `protobuf:"bytes,1,rep,name=bid" json:"bid,omitempty"`
	// ID of the bidder seat on whose behalf this bid is made。竟价的 seat
	Seat string `protobuf:"bytes,2,opt,name=seat" json:"seat,omitempty"`
}

func (m *BidResponse_SeatBid) Reset()         { *m = BidResponse_SeatBid{} }
func (m *BidResponse_SeatBid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid) ProtoMessage()    {}

func (m *BidResponse_SeatBid) GetBid() []*BidResponse_SeatBid_Bid {
	if m != nil {
		return m.Bid
	}
	return nil
}

// **** 竞价广告信息 ****
type BidResponse_SeatBid_Bid struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 竞价的曝光id
	Impid string `protobuf:"bytes,2,opt,name=impid" json:"impid,omitempty"`
	// 竞价，单位：千次展示/元
	Price float32 `protobuf:"fixed32,3,opt,name=price" json:"price,omitempty"`
	// ID of a preloaded ad to be served if the bid wins.
	Adid string `protobuf:"bytes,4,opt,name=adid" json:"adid,omitempty"`
	// winner通知url
	Nurl string `protobuf:"bytes,5,opt,name=nurl" json:"nurl,omitempty"`
	// ad markup. XHTML if banner, VAST XML if video
	Adm string `protobuf:"bytes,6,opt,name=adm" json:"adm,omitempty"`
	// campaign id
	Cid string `protobuf:"bytes,7,opt,name=cid" json:"cid,omitempty"`
	// creative id
	Crid string `protobuf:"bytes,8,opt,name=crid" json:"crid,omitempty"`
	// 物料尺寸 - 高度。需与请求中的尺寸一致
	H int32 `protobuf:"varint,9,opt,name=h" json:"h,omitempty"`
	// 物料尺寸 - 宽度。需与请求中的尺寸一致
	W int32 `protobuf:"varint,10,opt,name=w" json:"w,omitempty"`
	// IAB content categories of the creative as defined in OpenRTB.  Refer to List 5.1
	Cat []string `protobuf:"bytes,11,rep,name=cat" json:"cat,omitempty"`
}

func (m *BidResponse_SeatBid_Bid) Reset()         { *m = BidResponse_SeatBid_Bid{} }
func (m *BidResponse_SeatBid_Bid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid_Bid) ProtoMessage()    {}
